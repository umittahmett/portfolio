---
interface Props {
  title: string;
}

const { title } = Astro.props;
import ScrollToTopButton from "@/components/ui/scroll-to-top-button.astro";
import "../styles/index.css";
---

<!doctype html>
<html class="scroll-smooth bg-black" lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content=" I'm a Frontend Developer crafting user-friendly, visually appealing, and
      functional web interfaces. With modern technologies and innovative
      solutions, I'm ready to bring your projects to life!"
    />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
    <ScrollToTopButton />
    <script>
      import gsap from "gsap";
      import { ScrollTrigger } from "gsap/ScrollTrigger";
      gsap.registerPlugin(ScrollTrigger);

      const headings = document.querySelectorAll(".split-text");

      headings.forEach((heading) => {
        heading.style.overflow = "hidden";
        const text = heading.innerText;

        const segmenter = new Intl.Segmenter();
        const graphemes = Array.from(
          segmenter.segment(text),
          (segment) => segment.segment
        );

        const splitText = graphemes
          .map((char) => {
            if (char === " ") {
              return `<span class="char inline-block" style="display: inline-block;">&nbsp;</span>`;
            } else {
              return `<span class="char inline-block" style="display: inline-block;">${char}</span>`;
            }
          })
          .join("");

        heading.innerHTML = splitText;

        gsap.from(heading.querySelectorAll(".char"), {
          y: 130,
          stagger: 0.01,
          ease: "out",
          duration: 0.5,
          scrollTrigger: {
            trigger: heading,
            start: "top 100%",
            end: "bottom 20%",
          },
        });
      });

      const containers = document.querySelectorAll(".text-container");
      containers.forEach((container) => {
        gsap.from(container.querySelectorAll(".text-item"), {
          y: 10,
          opacity: 0,
          duration: 0.25,
          stagger: 0.09,
          ease: "in",
          scrollTrigger: {
            trigger: container,
            start: "top 80%",
            end: "bottom 20%",
            toggleActions: "play none none play",
          },
        });
      });
    </script>
  </body>
</html>
